Exercise 15: Create a database and Prisma model

In this exercise you'll build on what you created in 'Exercise: Create your own HTTP server'.

Create a database for your application and configure Prisma to use it. Then create a Prisma model and a migration. Choose your own theme for the model.

//

Exercise 16: Retrieve all resources

In this exercise you'll build on what you created in 'Unit 12, Exercise 1: Create a database and Prisma model'.

Add a route to your API that retrieves all resources.

//

Exercise 17: Create a resource

Add a route to your API that creates a resource. The route should validate the request body data.

//

Exercise 18: Retrieve, update and delete a resource

Add routes to your API for retrieving, updating and deleting a resource.

//

Exercise 19: Add support for CORS to your API

Configure your API to enable CORS for requests from the origin http://localhost:8080.

//

Exercise 20: Handle file uploads

In this exercise you'll build on what you created in Exercise: Add support for CORS to your API'.

Create an HTML form that can upload a file, and add a route to your API that accepts that file and saves it to disk.

//

Exercise 21: Refactor your application

In this exercise you'll build on what you created in 'Unit 15, Exercise 1: Handle file uploads'.

Refactor your API application so that:

Application configuration is accessed via one module (config.ts).
The routes are in their own module and imported into app.ts.
All middleware are organised under a middleware directory, and imported where they're needed.

//